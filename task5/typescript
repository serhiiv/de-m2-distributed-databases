Script started on 2025-03-21 21:11:44+00:00 [TERM="xterm-mono" TTY="/dev/pts/9" COLUMNS="205" LINES="52"]
[?2004h
 (main)
ls-8680:~/de-m2-distributed-databases/task5
$ [7mdocker exec -it cassandra-1 cqlsh --no-color[m[C[Cdocker exec -it cassandra-1 cqlsh --no-color
[?2004lConnected to de-2025-cluster at 127.0.0.1:9042
[cqlsh 6.2.0 | Cassandra 5.0.3 | CQL spec 3.4.7 | Native protocol v5]
Use HELP for help.
cqlsh> 
cqlsh> 
cqlsh> -- ###
cqlsh> DROP KEYSPACE IF EXISTS shop;
cqlsh> 
cqlsh> 
cqlsh> 
cqlsh> -- keyspace з найпростішої стратегією реплікації 
cqlsh> -- ###
cqlsh> CREATE KEYSPACE shop
   ... WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};
cqlsh> 
cqlsh> 
cqlsh> 
cqlsh> -- ###
cqlsh> USE shop;
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> DESCRIBE KEYSPACE shop;

CREATE KEYSPACE shop WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'}  AND durable_writes = true;
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Створення таблиці items
cqlsh:shop> -- ###
cqlsh:shop> DROP TABLE IF EXISTS items;
cqlsh:shop> CREATE TABLE items(
        ...     id UUID,
        ...     name TEXT,
        ...     category TEXT,
        ...     price DECIMAL,
        ...     producer TEXT,
        ...     attributes MAP<TEXT, TEXT>,
        ...     PRIMARY KEY (category, price, id)
        ... ) WITH CLUSTERING ORDER BY (price ASC);
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Перевірка структури таблиці
cqlsh:shop> -- ###
cqlsh:shop> DESCRIBE TABLE items;

CREATE TABLE shop.items (
    category text,
    price decimal,
    id uuid,
    name text,
    producer text,
    attributes map<text, text>,
    PRIMARY KEY (category, price, id)
) WITH CLUSTERING ORDER BY (price ASC, id ASC)
    AND additional_write_policy = '99p'
    AND allow_auto_snapshot = true
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND memtable = 'default'
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND incremental_backups = true
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Заповнення таблиці items
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Smartphone X', 999.99, 'Samsung', {'color': 'black', 'storage': '128GB', 'screen_size': '6.1 inch'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Smartphone Y', 799.99, 'Samsung', {'color': 'blue', 'storage': '256GB', 'screen_size': '6.5 inch'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Laptop Pro', 1299.99, 'Dell', {'cpu': 'Intel i7', 'ram': '16GB', 'storage': '512GB SSD'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Smart TV 55"', 699.99, 'Sony', {'resolution': '4K', 'screen_size': '55 inch', 'smart': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Wireless Headphones', 199.99, 'Bose', {'color': 'white', 'battery_life': '20h', 'noise_cancellation': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('electronics', uuid(), 'Gaming Console', 499.99, 'Microsoft', {'color': 'black', 'storage': '1TB', 'controller': 'Wireless'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('home_appliances', uuid(), 'Refrigerator XL', 1499.99, 'LG', {'capacity': '500L', 'energy_class': 'A++', 'color': 'silver'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('home_appliances', uuid(), 'Washing Machine 8kg', 799.99, 'Bosch', {'capacity': '8kg', 'spin_speed': '1400 rpm', 'color': 'white'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('home_appliances', uuid(), 'Microwave Oven', 299.99, 'Samsung', {'power': '900W', 'capacity': '25L', 'color': 'black'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('home_appliances', uuid(), 'Air Conditioner', 999.99, 'Daikin', {'cooling_power': '2.5kW', 'energy_class': 'A+', 'smart_control': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('home_appliances', uuid(), 'Vacuum Cleaner', 249.99, 'Dyson', {'power': '750W', 'cordless': 'Yes', 'filter': 'HEPA'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('furniture', uuid(), 'Sofa 3-seater', 1199.99, 'IKEA', {'material': 'leather', 'color': 'brown', 'dimensions': '220x90x80cm'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('furniture', uuid(), 'Dining Table', 899.99, 'WoodArt', {'material': 'oak wood', 'seats': '6', 'dimensions': '180x90x75cm'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('furniture', uuid(), 'Office Chair', 399.99, 'ErgoSeat', {'material': 'mesh', 'adjustable_height': 'Yes', 'color': 'black'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('furniture', uuid(), 'Wardrobe 4-door', 1299.99, 'HomeStyle', {'material': 'MDF', 'color': 'white', 'dimensions': '240x60x210cm'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('furniture', uuid(), 'Bed King Size', 1599.99, 'SleepWell', {'material': 'solid wood', 'mattress_size': '180x200cm', 'storage': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('sports', uuid(), 'Treadmill', 899.99, 'ProForm', {'motor_power': '3HP', 'max_speed': '20km/h', 'foldable': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('sports', uuid(), 'Exercise Bike', 499.99, 'NordicTrack', {'resistance_levels': '20', 'display': 'LCD', 'heart_rate_monitor': 'Yes'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('sports', uuid(), 'Dumbbell Set', 199.99, 'GymPro', {'weight_range': '5-30kg', 'adjustable': 'Yes', 'material': 'steel'});
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO items (category, id, name, price, producer, attributes) 
        ... VALUES ('sports', uuid(), 'Yoga Mat', 49.99, 'Liforme', {'material': 'eco-friendly', 'thickness': '5mm', 'color': 'purple'});
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> SELECT * FROM items;

 category        | price   | id                                   | attributes                                                                 | name                | producer
-----------------+---------+--------------------------------------+----------------------------------------------------------------------------+---------------------+-------------
     electronics |  199.99 | 3da7a088-40e7-4d19-a3fc-a4df7e081e36 |     {'battery_life': '20h', 'color': 'white', 'noise_cancellation': 'Yes'} | Wireless Headphones |        Bose
     electronics |  499.99 | d8e8b56f-f663-4fb0-9512-5aa14baf0db9 |             {'color': 'black', 'controller': 'Wireless', 'storage': '1TB'} |      Gaming Console |   Microsoft
     electronics |  699.99 | 2fe2d017-e356-48fc-923b-86d93148ff9b |             {'resolution': '4K', 'screen_size': '55 inch', 'smart': 'Yes'} |        Smart TV 55" |        Sony
     electronics |  799.99 | 984d000b-19d7-4dd7-bf6b-03d9dd92ffbc |           {'color': 'blue', 'screen_size': '6.5 inch', 'storage': '256GB'} |        Smartphone Y |     Samsung
     electronics |  999.99 | 924db788-cd4c-479b-b9ef-95aaf8a90260 |          {'color': 'black', 'screen_size': '6.1 inch', 'storage': '128GB'} |        Smartphone X |     Samsung
     electronics | 1299.99 | b145d88d-9e3e-4b4b-95e1-56642e190d11 |                 {'cpu': 'Intel i7', 'ram': '16GB', 'storage': '512GB SSD'} |          Laptop Pro |        Dell
          sports |   49.99 | d0f64545-4de0-4aa8-b22e-34d5e50aeb2d |        {'color': 'purple', 'material': 'eco-friendly', 'thickness': '5mm'} |            Yoga Mat |     Liforme
          sports |  199.99 | 69d005a5-8e26-44cb-9428-703aa6e90b71 |       {'adjustable': 'Yes', 'material': 'steel', 'weight_range': '5-30kg'} |        Dumbbell Set |      GymPro
          sports |  499.99 | cef22ce4-392b-430a-aef4-58697de755f0 | {'display': 'LCD', 'heart_rate_monitor': 'Yes', 'resistance_levels': '20'} |       Exercise Bike | NordicTrack
          sports |  899.99 | 7a5c2bd7-b027-4cfe-893f-c8250dac8df2 |           {'foldable': 'Yes', 'max_speed': '20km/h', 'motor_power': '3HP'} |           Treadmill |     ProForm
       furniture |  399.99 | f8d1c5c0-fcfd-4ff0-b501-76c56b6a5aec |         {'adjustable_height': 'Yes', 'color': 'black', 'material': 'mesh'} |        Office Chair |    ErgoSeat
       furniture |  899.99 | 79186222-8135-4a48-839d-b0f2a4442439 |        {'dimensions': '180x90x75cm', 'material': 'oak wood', 'seats': '6'} |        Dining Table |     WoodArt
       furniture | 1199.99 | 7788ff49-47b4-4399-afe8-320f5659c954 |     {'color': 'brown', 'dimensions': '220x90x80cm', 'material': 'leather'} |       Sofa 3-seater |        IKEA
       furniture | 1299.99 | cc2e12af-0df4-4b83-b7b6-39728787180a |        {'color': 'white', 'dimensions': '240x60x210cm', 'material': 'MDF'} |     Wardrobe 4-door |   HomeStyle
       furniture | 1599.99 | a6c1e2b8-6ae7-4645-a7a1-76edca8b5bd6 | {'material': 'solid wood', 'mattress_size': '180x200cm', 'storage': 'Yes'} |       Bed King Size |   SleepWell
 home_appliances |  249.99 | a5967cb8-5008-4020-a805-7441cd7b5ddf |                     {'cordless': 'Yes', 'filter': 'HEPA', 'power': '750W'} |      Vacuum Cleaner |       Dyson
 home_appliances |  299.99 | accd2bbd-fe59-490d-b2e2-a0d35bc2229c |                     {'capacity': '25L', 'color': 'black', 'power': '900W'} |      Microwave Oven |     Samsung
 home_appliances |  799.99 | ee1368c0-ceb4-4b0c-9a7d-88538c4d8086 |            {'capacity': '8kg', 'color': 'white', 'spin_speed': '1400 rpm'} | Washing Machine 8kg |       Bosch
 home_appliances |  999.99 | e9e56579-1542-4644-b0bf-da12b4047e16 |   {'cooling_power': '2.5kW', 'energy_class': 'A+', 'smart_control': 'Yes'} |     Air Conditioner |      Daikin
 home_appliances | 1499.99 | 8fc278be-e8ce-4ffe-9f2a-0b9001cffddb |             {'capacity': '500L', 'color': 'silver', 'energy_class': 'A++'} |     Refrigerator XL |          LG

(20 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Q1. Запит на отримання всіх товарів у певній категорії, відсортованих за ціною
cqlsh:shop> -- ###
cqlsh:shop> SELECT category, name, price, producer, attributes FROM items WHERE category = 'electronics';

 category    | name                | price   | producer  | attributes
-------------+---------------------+---------+-----------+------------------------------------------------------------------------
 electronics | Wireless Headphones |  199.99 |      Bose | {'battery_life': '20h', 'color': 'white', 'noise_cancellation': 'Yes'}
 electronics |      Gaming Console |  499.99 | Microsoft |         {'color': 'black', 'controller': 'Wireless', 'storage': '1TB'}
 electronics |        Smart TV 55" |  699.99 |      Sony |         {'resolution': '4K', 'screen_size': '55 inch', 'smart': 'Yes'}
 electronics |        Smartphone Y |  799.99 |   Samsung |       {'color': 'blue', 'screen_size': '6.5 inch', 'storage': '256GB'}
 electronics |        Smartphone X |  999.99 |   Samsung |      {'color': 'black', 'screen_size': '6.1 inch', 'storage': '128GB'}
 electronics |          Laptop Pro | 1299.99 |      Dell |             {'cpu': 'Intel i7', 'ram': '16GB', 'storage': '512GB SSD'}

(6 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Пошук товару за назвою в межах категорії
cqlsh:shop> -- ###
cqlsh:shop> CREATE MATERIALIZED VIEW items_by_name AS
        ... SELECT category, name, price, producer, id, attributes
        ... FROM items
        ... WHERE category IS NOT NULL AND name IS NOT NULL AND price IS NOT NULL AND id IS NOT NULL
        ... PRIMARY KEY (category, name, price, id);

Warnings :
Materialized views are experimental and are not recommended for production use.

cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Q2. Запит для отримання товару за назвою:
cqlsh:shop> -- ###
cqlsh:shop> SELECT category, name, price, producer, attributes FROM items_by_name WHERE category = 'electronics' AND name = 'Smartphone X';

 category    | name         | price  | producer | attributes
-------------+--------------+--------+----------+-------------------------------------------------------------------
 electronics | Smartphone X | 999.99 |  Samsung | {'color': 'black', 'screen_size': '6.1 inch', 'storage': '128GB'}

(1 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Пошук товарів за ціною в межах діапазону*
cqlsh:shop> -- ###
cqlsh:shop> CREATE MATERIALIZED VIEW items_by_price_range AS
        ... SELECT category, price, name, producer, id, attributes
        ... FROM items
        ... WHERE category IS NOT NULL AND price IS NOT NULL AND id IS NOT NULL
        ... PRIMARY KEY (category, price, id);

Warnings :
Materialized views are experimental and are not recommended for production use.

cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Q3. Запит для отримання товарів у певному ціновому діапазоні:
cqlsh:shop> -- ###
cqlsh:shop> SELECT category, name, price, producer, attributes FROM items_by_price_range WHERE category = 'electronics' AND price >= 500 AND price <= 1000;

 category    | name         | price  | producer | attributes
-------------+--------------+--------+----------+-------------------------------------------------------------------
 electronics | Smart TV 55" | 699.99 |     Sony |    {'resolution': '4K', 'screen_size': '55 inch', 'smart': 'Yes'}
 electronics | Smartphone Y | 799.99 |  Samsung |  {'color': 'blue', 'screen_size': '6.5 inch', 'storage': '256GB'}
 electronics | Smartphone X | 999.99 |  Samsung | {'color': 'black', 'screen_size': '6.1 inch', 'storage': '128GB'}

(3 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Пошук товарів за ціною та виробником у межах категорії**
cqlsh:shop> -- ###
cqlsh:shop> CREATE MATERIALIZED VIEW items_by_price_and_producer AS
        ... SELECT category, price, producer, name, id, attributes
        ... FROM items
        ... WHERE category IS NOT NULL AND producer IS NOT NULL AND price IS NOT NULL AND id IS NOT NULL
        ... PRIMARY KEY (category, producer, price, id);

Warnings :
Materialized views are experimental and are not recommended for production use.

cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Q4. Запит для отримання товарів за ціною та виробником:
cqlsh:shop> -- ###
cqlsh:shop> SELECT category, name, price, producer, attributes FROM items_by_price_and_producer WHERE category = 'electronics' AND producer = 'Samsung' AND price <= 1500;

 category    | name         | price  | producer | attributes
-------------+--------------+--------+----------+-------------------------------------------------------------------
 electronics | Smartphone Y | 799.99 |  Samsung |  {'color': 'blue', 'screen_size': '6.5 inch', 'storage': '256GB'}
 electronics | Smartphone X | 999.99 |  Samsung | {'color': 'black', 'screen_size': '6.1 inch', 'storage': '128GB'}

(2 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Створення таблиці orders
cqlsh:shop> -- ###
cqlsh:shop> CREATE TABLE orders (
        ...     customer_name TEXT,
        ...     order_date TIMESTAMP,
        ...     order_id UUID,
        ...     item_ids LIST<UUID>,
        ...     cost DECIMAL,
        ...     PRIMARY KEY (customer_name, order_date, order_id)
        ... ) WITH CLUSTERING ORDER BY (order_date ASC);
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Перевірка структури таблиці
cqlsh:shop> -- ###
cqlsh:shop> DESCRIBE TABLE orders;

CREATE TABLE shop.orders (
    customer_name text,
    order_date timestamp,
    order_id uuid,
    cost decimal,
    item_ids list<uuid>,
    PRIMARY KEY (customer_name, order_date, order_id)
) WITH CLUSTERING ORDER BY (order_date ASC, order_id ASC)
    AND additional_write_policy = '99p'
    AND allow_auto_snapshot = true
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND memtable = 'default'
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND incremental_backups = true
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('John Doe', uuid(), [uuid(), uuid()], 1599.99, '2024-03-01 10:30:00');
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('John Doe', uuid(), [uuid()], 499.99, '2024-03-05 14:15:00');
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('Alice Smith', uuid(), [uuid()], 199.99, '2024-03-06 12:00:00');
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('Bob Johnson', uuid(), [uuid(), uuid()], 1099.50, '2024-03-04 16:20:00');
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('Bob Johnson', uuid(), [uuid()], 249.99, '2024-03-07 09:40:00');
cqlsh:shop> INSERT INTO orders (customer_name, order_id, item_ids, cost, order_date) VALUES ('John Doe', uuid(), [uuid()], 149.99, '2024-03-08 07:30:00');
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- ###
cqlsh:shop> SELECT * FROM orders;

 customer_name | order_date                      | order_id                             | cost    | item_ids
---------------+---------------------------------+--------------------------------------+---------+------------------------------------------------------------------------------
      John Doe | 2024-03-01 10:30:00.000000+0000 | 436b3e32-e459-4584-85b8-c6ef504da970 | 1599.99 | [2d6f2657-40b5-4299-993c-ba401ae5669d, 3cd366cf-1b30-4b16-a4e1-6e1950cca645]
      John Doe | 2024-03-05 14:15:00.000000+0000 | 41c8409c-e160-44d7-abeb-9b41171e05f5 |  499.99 |                                       [ecf2aa8a-fe7a-4e4a-9718-2affa33467e0]
      John Doe | 2024-03-08 07:30:00.000000+0000 | b41e44d0-16dc-4375-a2cc-63ee3bfc07f5 |  149.99 |                                       [e2a52f0b-36e0-4a79-b029-cd7e8544da4b]
   Bob Johnson | 2024-03-04 16:20:00.000000+0000 | f7da6e4c-4db8-44a5-bd76-2d8ce9d2b77e | 1099.50 | [f23636c3-a3a8-4415-a9be-273768567f81, 29169654-f1bf-4ec3-9eb8-272cd9b47aef]
   Bob Johnson | 2024-03-07 09:40:00.000000+0000 | 7e880cb2-b733-4ead-a624-e79aee767c11 |  249.99 |                                       [e9fbe0ed-7042-4ae5-afe3-b6f32a7f2adf]
   Alice Smith | 2024-03-06 12:00:00.000000+0000 | 9dd69117-0cc5-4c3d-8266-2561efd46db2 |  199.99 |                                       [3c2ead79-c5fd-4c6d-a650-a7a2f26c01d1]

(6 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Виведення всіх замовлень певного замовника, відсортованих за датою
cqlsh:shop> -- ###
cqlsh:shop> SELECT * FROM orders WHERE customer_name = 'John Doe';

 customer_name | order_date                      | order_id                             | cost    | item_ids
---------------+---------------------------------+--------------------------------------+---------+------------------------------------------------------------------------------
      John Doe | 2024-03-01 10:30:00.000000+0000 | 436b3e32-e459-4584-85b8-c6ef504da970 | 1599.99 | [2d6f2657-40b5-4299-993c-ba401ae5669d, 3cd366cf-1b30-4b16-a4e1-6e1950cca645]
      John Doe | 2024-03-05 14:15:00.000000+0000 | 41c8409c-e160-44d7-abeb-9b41171e05f5 |  499.99 |                                       [ecf2aa8a-fe7a-4e4a-9718-2affa33467e0]
      John Doe | 2024-03-08 07:30:00.000000+0000 | b41e44d0-16dc-4375-a2cc-63ee3bfc07f5 |  149.99 |                                       [e2a52f0b-36e0-4a79-b029-cd7e8544da4b]

(3 rows)
cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Визначення суми усіх замовлень кожного клієнта
cqlsh:shop> -- ###
cqlsh:shop> SELECT customer_name, SUM(cost) AS total_spent FROM orders GROUP BY customer_name;

 customer_name | total_spent
---------------+-------------
      John Doe |     2249.97
   Bob Johnson |     1349.49
   Alice Smith |      199.99

(3 rows)

Warnings :
Aggregation query used without partition key

cqlsh:shop> 
cqlsh:shop> 
cqlsh:shop> -- Виведення часу, коли була записана ціна замовлення
cqlsh:shop> -- ###
cqlsh:shop> SELECT order_id, cast(WRITETIME(cost) as date) AS write_time FROM orders;

 order_id                             | write_time
--------------------------------------+------------
 436b3e32-e459-4584-85b8-c6ef504da970 |   20168884
 41c8409c-e160-44d7-abeb-9b41171e05f5 |   20168884
 b41e44d0-16dc-4375-a2cc-63ee3bfc07f5 |   20168884
 f7da6e4c-4db8-44a5-bd76-2d8ce9d2b77e |   20168884
 7e880cb2-b733-4ead-a624-e79aee767c11 |   20168884
 9dd69117-0cc5-4c3d-8266-2561efd46db2 |   20168884

(6 rows)
cqlsh:shop> 
[?2004h
 (main)
ls-8680:~/de-m2-distributed-databases/task5
$ [?2004l
exit

Script done on 2025-03-21 21:13:49+00:00 [COMMAND_EXIT_CODE="0"]
